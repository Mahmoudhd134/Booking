@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Booking.Mvc.Controllers.AddBookingViewModel

@{
    ViewData["Title"] = "Add Booking";
}

<h2>Add Booking</h2>
<form id="bookingForm">
    <!-- Customer Dropdown -->
    <div class="form-group">
        <label for="customerSelect">Select Customer</label>
        <select id="customerSelect" class="form-control" required>
            <option value="">-- Select a customer --</option>
            @foreach (var customer in Model.Customers)
            {
                <option value="@customer.NId" data-phone="@customer.PhoneNumber">
                    @customer.Name
                </option>
            }
        </select>
    </div>

    <!-- Hotel Dropdown -->
    <div class="form-group">
        <label for="hotelSelect">Select Hotel</label>
        <select id="hotelSelect" class="form-control" required>
            <option value="">-- Select a hotel --</option>
            @foreach (var hotel in Model.Hotels)
            {
                <option value="@hotel.Id">@hotel.BranchName</option>
            }
        </select>
    </div>

    <!-- Check In / Check Out Dates -->
    <div class="form-group">
        <label for="checkInInput">Check In</label>
        <input type="datetime-local" id="checkInInput" class="form-control" required/>
    </div>
    <div class="form-group">
        <label for="checkOutInput">Check Out</label>
        <input type="datetime-local" id="checkOutInput" class="form-control" required/>
    </div>

    <!-- Room Quantity Inputs -->
    <div class="form-group">
        <label>Number of Rooms Required</label>
        <div class="row">
            <div class="col">
                <label for="singleRooms">Single</label>
                <input type="number" id="singleRooms" class="form-control" min="0" value="0"/>
            </div>
            <div class="col">
                <label for="doubleRooms">Double</label>
                <input type="number" id="doubleRooms" class="form-control" min="0" value="0"/>
            </div>
            <div class="col">
                <label for="suitRooms">Suit</label>
                <input type="number" id="suitRooms" class="form-control" min="0" value="0"/>
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Check Availability</button>
</form>

<!-- Error message container -->
<div id="errorMessage" class="mt-3"></div>

<!-- Container to display the available rooms as per request -->
<div id="roomsContainer" class="mt-4"></div>

<!-- Booking Modal (readonly) -->
<div class="modal fade" id="bookingModal" tabindex="-1" role="dialog" aria-labelledby="bookingModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookingModalLabel">Booking Summary</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="modalCloseBtn">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Readonly Booking Summary -->
                <p>
                    <strong>Customer:</strong> <span id="modalCustomer"></span>
                </p>
                <p>
                    <strong>Hotel:</strong> <span id="modalHotel"></span>
                </p>
                <p>
                    <strong>Check In:</strong> <span id="modalCheckIn"></span>
                </p>
                <p>
                    <strong>Check Out:</strong> <span id="modalCheckOut"></span>
                </p>
                <!-- Wrap the summary table with a responsive div -->
                <div class="table-responsive">
                    <div id="modalRoomsSummary"></div>
                </div>
                <div id="modalPriceSummary" class="mt-3"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmBooking" disabled>Confirm Booking</button>
            </div>
        </div>
    </div>
</div>

<script>
    let allAvailableRooms = null;
    let currentQuery = { hotelId: null, checkIn: null, checkOut: null };
    let finalBookingRequest = null;

    function roomTypeToString(roomType) {
        switch (roomType) {
            case 1: return "Single";
            case 2: return "Double";
            case 3: return "Suit";
            default: return "Unknown";
        }
    }

    $(document).on("click", "[data-dismiss='modal']", function () {
        $('#bookingModal').modal('hide');
    });

    function generateDropdown(maxValue, cssClass) {
        let selectHtml = "<select class='" + cssClass + " form-control'>";
        for (let i = 0; i <= maxValue; i++) {
            selectHtml += "<option value='" + i + "'>" + i + "</option>";
        }
        selectHtml += "</select>";
        return selectHtml;
    }

    function filterAndDisplayRooms() {
        const requestedSingle = parseInt($("#singleRooms").val());
        const requestedDouble = parseInt($("#doubleRooms").val());
        const requestedSuit = parseInt($("#suitRooms").val());
        
        if (requestedSingle === 0 && requestedDouble === 0 && requestedSuit ===0){
            $("#roomsContainer").empty();
            return
        }

        let availableRooms = { 1: [], 2: [], 3: [] };
        $.each(allAvailableRooms, function (i, room) {
            if (room.roomType in availableRooms) {
                availableRooms[room.roomType].push(room);
            }
        });

        const errorMessages = [];
        if (requestedSingle > availableRooms[1].length) {
            errorMessages.push("Not enough Single rooms available. Requested: " + requestedSingle + ", Available: " + availableRooms[1].length);
        }
        if (requestedDouble > availableRooms[2].length) {
            errorMessages.push("Not enough Double rooms available. Requested: " + requestedDouble + ", Available: " + availableRooms[2].length);
        }
        if (requestedSuit > availableRooms[3].length) {
            errorMessages.push("Not enough Suit rooms available. Requested: " + requestedSuit + ", Available: " + availableRooms[3].length);
        }

        if (errorMessages.length > 0) {
            $("#errorMessage").html('<p class="text-danger">' + errorMessages.join("<br>") + '</p>');
            $("#roomsContainer").empty();
            return;
        }
        $("#errorMessage").empty();

        let html = '<h3>Selected Available Rooms</h3>';
        html += '<div class="table-responsive">';
        html += '<table class="table table-bordered">';
        html += '<thead><tr>' +
            '<th>Room ID</th>' +
            '<th>Room Type</th>' +
            '<th>Adults Allowed</th>' +
            '<th>Children Allowed</th>' +
            '<th>Price Per Night</th>' +
            '<th>Select Adults</th>' +
            '<th>Select Children</th>' +
            '</tr></thead>';
        html += '<tbody>';

        function addRows(roomType, requestedCount) {
            if (requestedCount > 0) {
                let displayRooms = availableRooms[roomType].slice(0, requestedCount);
                $.each(displayRooms, function (i, room) {
                    html += '<tr data-roomid="' + room.id + '">';
                    html += '<td>' + room.id + '</td>';
                    html += '<td>' + roomTypeToString(room.roomType) + '</td>';
                    html += '<td>' + room.adults + '</td>';
                    html += '<td>' + room.children + '</td>';
                    html += '<td>' + room.pricePerNight + '</td>';
                    html += '<td>' + generateDropdown(room.adults, "adult-select") + '</td>';
                    html += '<td>' + generateDropdown(room.children, "child-select") + '</td>';
                    html += '</tr>';
                });
            }
        }

        addRows(1, requestedSingle);
        addRows(2, requestedDouble);
        addRows(3, requestedSuit);

        html += '</tbody></table></div>';
        html += '<button id="bookButton" class="btn btn-success mt-3">Book</button>';
        $("#roomsContainer").html(html);
    }

    function loadAvailableRooms(callback) {
        const hotelId = $("#hotelSelect").val();
        const checkIn = $("#checkInInput").val();
        const checkOut = $("#checkOutInput").val();

        if (!hotelId || !checkIn || !checkOut) {
            $("#errorMessage").html('<p class="text-danger">Please select a hotel and specify both check-in and check-out dates.</p>');
            return;
        }

        if (currentQuery.hotelId !== hotelId || currentQuery.checkIn !== checkIn || currentQuery.checkOut !== checkOut) {
            currentQuery = { hotelId: hotelId, checkIn: checkIn, checkOut: checkOut };
            allAvailableRooms = null;
        }

        if (allAvailableRooms !== null) {
            if (callback) callback();
            return;
        }

        const url = 'Hotel/' + hotelId + '/available-rooms';
        $.ajax({
            url: url,
            type: 'GET',
            data: { checkIn: checkIn, checkOut: checkOut },
            success: function (response) {
                allAvailableRooms = response;
                if (callback) callback();
            },
            error: function () {
                $("#roomsContainer").html('<p class="text-danger">An error occurred while fetching available rooms.</p>');
            }
        });
    }

    function buildModalSummary() {
        let summaryHtml = "<div class='table-responsive'><table class='table table-bordered'>";
        summaryHtml += "<thead><tr>" +
            "<th>Room ID</th>" +
            "<th>Room Type</th>" +
            "<th>Adults Allowed</th>" +
            "<th>Children Allowed</th>" +
            "<th>Price Per Night</th>" +
            "<th>Selected Adults</th>" +
            "<th>Selected Children</th>" +
            "</tr></thead><tbody>";
        $("#roomsContainer table tbody tr").each(function () {
            const roomId = $(this).find("td:eq(0)").text();
            const roomType = $(this).find("td:eq(1)").text();
            const adultsAllowed = $(this).find("td:eq(2)").text();
            const childrenAllowed = $(this).find("td:eq(3)").text();
            const pricePerNight = $(this).find("td:eq(4)").text();
            const selectedAdults = $(this).find("td:eq(5) select").val();
            const selectedChildren = $(this).find("td:eq(6) select").val();

            summaryHtml += "<tr>";
            summaryHtml += "<td>" + roomId + "</td>";
            summaryHtml += "<td>" + roomType + "</td>";
            summaryHtml += "<td>" + adultsAllowed + "</td>";
            summaryHtml += "<td>" + childrenAllowed + "</td>";
            summaryHtml += "<td>" + pricePerNight + "</td>";
            summaryHtml += "<td>" + selectedAdults + "</td>";
            summaryHtml += "<td>" + selectedChildren + "</td>";
            summaryHtml += "</tr>";
        });
        summaryHtml += "</tbody></table></div>";
        return summaryHtml;
    }

    function sendPriceRequest(modalData) {
        $("#confirmBooking").prop("disabled", true);
        $("#modalPriceSummary").html("<p>Calculating price...</p>");
        $.ajax({
            url: 'Booking/price',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(modalData),
            success: function (priceData) {
                const priceHtml = "<p><strong>Discount:</strong> " + priceData.discount + "</p>" +
                    "<p><strong>Price Before Discount:</strong> " + priceData.priceBeforeDiscount + "</p>" +
                    "<p><strong>Price After Discount:</strong> " + priceData.priceAfterDiscount + "</p>";
                $("#modalPriceSummary").html(priceHtml);
                $("#confirmBooking").prop("disabled", false);
            },
            error: function () {
                $("#modalPriceSummary").html('<p class="text-danger">Failed to calculate price.</p>');
            }
        });
    }

    $(document).on("click", "#bookButton", function () {
        const customerSelect = $("#customerSelect option:selected");
        const customerNId = customerSelect.val();
        const customerName = customerSelect.text();
        const customerPhone = customerSelect.data("phone");
        $("#modalCustomer").text(customerName + " (" + customerPhone + ")");

        const hotelText = $("#hotelSelect option:selected").text();
        const checkIn = $("#checkInInput").val();
        const checkOut = $("#checkOutInput").val();
        $("#modalHotel").text(hotelText);
        $("#modalCheckIn").text(checkIn);
        $("#modalCheckOut").text(checkOut);

        const summaryTableHtml = buildModalSummary();
        $("#modalRoomsSummary").html(summaryTableHtml);

        finalBookingRequest = {
            customerNId: customerNId,
            hotelId: parseInt($("#hotelSelect").val()),
            items: [],
            checkIn: new Date(checkIn).toISOString(),
            checkOut: new Date(checkOut).toISOString()
        };

        $("#roomsContainer table tbody tr").each(function () {
            const roomId = parseInt($(this).find("td:first").text());
            const selectedAdults = parseInt($(this).find("td:eq(5) select").val());
            const selectedChildren = parseInt($(this).find("td:eq(6) select").val());
            finalBookingRequest.items.push({
                roomId: roomId,
                adults: selectedAdults,
                children: selectedChildren
            });
        });

        $("#bookingModal").modal("show");
        sendPriceRequest(finalBookingRequest);
    });

    $("#confirmBooking").on("click", function () {
        $("#confirmBooking").prop("disabled", true);
        $("#modalPriceSummary").append("<p>Confirming booking...</p>");
        $.ajax({
            url: 'Booking',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(finalBookingRequest),
            success: function (bookingResponse) {
                console.log("Booking confirmed successfully:", bookingResponse);
                $("#bookingModal").modal("hide");
            },
            error: function () {
                console.error("Failed to confirm booking.");
                $("#modalPriceSummary").append("<p class='text-danger'>Failed to confirm booking.</p>");
                $("#confirmBooking").prop("disabled", false);
            }
        });
    });

    $(document).ready(function () {
        $("#bookingForm").on("submit", function (e) {
            e.preventDefault();
            loadAvailableRooms(filterAndDisplayRooms);
        });

        $("#singleRooms, #doubleRooms, #suitRooms").on("input", function () {
            if (allAvailableRooms !== null) {
                filterAndDisplayRooms();
            }
        });

        $("#hotelSelect, #checkInInput, #checkOutInput").on("change", function () {
            allAvailableRooms = null;
            $("#roomsContainer").empty();
            $("#errorMessage").empty();
        });
    });
</script>